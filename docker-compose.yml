services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: footballai_postgres
    environment:
      POSTGRES_DB: football_ai_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-321007}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - footballai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d football_ai_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: footballai_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-321007} --bind 0.0.0.0 --protected-mode no
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - footballai_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Football AI API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: footballai_api
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: football_ai_db
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-321007}
      DB_DIALECT: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-321007}
      REDIS_DB: 0
      REDIS_FAMILY: 4
      REDIS_CONNECT_TIMEOUT: 10000
      REDIS_COMMAND_TIMEOUT: 5000
      FOOTBALL_API_KEY: ${FOOTBALL_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      RATE_LIMIT_WINDOW_MS: 60000
      RATE_LIMIT_MAX_REQUESTS: 100
      ML_PREDICTION_THRESHOLD: 0.6
      ML_MODEL_PATH: ./models
      ML_TRAINING_DATA_PATH: ./data/training
      FORCE_SYNC: "true"
      BETTING_MIN_VALUE_THRESHOLD: 0.05
      BETTING_MAX_KELLY_FRACTION: 0.25
      BETTING_MIN_CONFIDENCE_THRESHOLD: 0.6
      LOG_LEVEL: info
      LOG_FILE: logs/app.log
      API_VERSION: v1
      API_PREFIX: /api
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - footballai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: footballai_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - footballai_network
    restart: unless-stopped

  # Redis Commander (Optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: footballai_redis_commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-321007}
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - footballai_network
    profiles:
      - dev

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: footballai_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@footballai.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - footballai_network
    profiles:
      - dev

  # Monitoring with Prometheus and Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: footballai_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - footballai_network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: footballai_grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - footballai_network
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  footballai_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
